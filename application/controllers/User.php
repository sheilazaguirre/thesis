<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $data['users'] = $this->User_model->get_all_users();
        
        $data['_view'] = 'user/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('userIDNo','UserIDNo','required|integer');
		$this->form_validation->set_rules('userLN','UserLN','required|max_length[50]');
		$this->form_validation->set_rules('userFN','UserFN','required|max_length[50]');
		$this->form_validation->set_rules('userEmail','UserEmail','required|max_length[100]');
		$this->form_validation->set_rules('userPassword','UserPassword','required|max_length[300]');
		$this->form_validation->set_rules('userMobile','UserMobile','required|max_length[15]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'userTypeID' => $this->input->post('userTypeID'),
				'userIDNo' => $this->input->post('userIDNo'),
				'userLN' => $this->input->post('userLN'),
				'userFN' => $this->input->post('userFN'),
				'userEmail' => $this->input->post('userEmail'),
				'userPassword' => $this->input->post('userPassword'),
				'userMobile' => $this->input->post('userMobile'),
            );
            $this->db->set('status', 'Active');
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        }
        else
        {
			$this->load->model('Usertype_model');
			$data['all_usertype'] = $this->Usertype_model->get_all_usertype();
            
            $data['_view'] = 'user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($userID)
    {   
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($userID);
        
        if(isset($data['user']['userID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('userIDNo','UserIDNo','required|integer');
			$this->form_validation->set_rules('userLN','UserLN','required|max_length[50]');
			$this->form_validation->set_rules('userFN','UserFN','required|max_length[50]');
			$this->form_validation->set_rules('userEmail','UserEmail','required|max_length[100]');
			$this->form_validation->set_rules('userPassword','UserPassword','required|max_length[300]');
			$this->form_validation->set_rules('userMobile','UserMobile','required|max_length[15]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'userTypeID' => $this->input->post('userTypeID'),
					'userIDNo' => $this->input->post('userIDNo'),
					'userLN' => $this->input->post('userLN'),
					'userFN' => $this->input->post('userFN'),
					'userEmail' => $this->input->post('userEmail'),
					'userPassword' => $this->input->post('userPassword'),
					'userMobile' => $this->input->post('userMobile'),
                );

                $this->User_model->update_user($userID,$params);            
                redirect('user/index');
            }
            else
            {
				$this->load->model('Usertype_model');
				$data['all_usertype'] = $this->Usertype_model->get_all_usertype();

                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($userID)
    {
        $user = $this->User_model->get_user($userID);

        // check if the user exists before trying to delete it
        if(isset($user['userID']))
        {
            $this->db->set('status', 'Archive');
            $this->User_model->delete_user($userID);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
}
