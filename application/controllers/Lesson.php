<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Lesson extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Lesson_model');
    } 

    /*
     * Listing of lessons
     */
    function index()
    {
        $data['lessons'] = $this->Lesson_model->get_all_lessons();
        
        $data['_view'] = 'lesson/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new lesson
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('classID','ClassID','required|integer');
		$this->form_validation->set_rules('lessonFile','LessonFile','required|max_length[150]');
		$this->form_validation->set_rules('lessonDesc','LessonDesc','required|max_length[150]');
		$this->form_validation->set_rules('lessonTitle','LessonTitle','required|max_length[50]');
		$this->form_validation->set_rules('dateUploaded','DateUploaded','required');
		$this->form_validation->set_rules('dateModified','DateModified','required');
		$this->form_validation->set_rules('dateExpiry','DateExpiry','required');
		$this->form_validation->set_rules('status','Status','required|max_length[15]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'classID' => $this->input->post('classID'),
				'lessonFile' => $this->input->post('lessonFile'),
				'lessonDesc' => $this->input->post('lessonDesc'),
				'lessonTitle' => $this->input->post('lessonTitle'),
				'dateUploaded' => $this->input->post('dateUploaded'),
				'dateModified' => $this->input->post('dateModified'),
				'dateExpiry' => $this->input->post('dateExpiry'),
				'status' => $this->input->post('status'),
            );
            
            $lesson_id = $this->Lesson_model->add_lesson($params);
            redirect('lesson/index');
        }
        else
        {
			$this->load->model('Theclass_model');
			$data['all_theclasses'] = $this->Theclass_model->get_all_theclasses();
            
            $data['_view'] = 'lesson/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a lesson
     */
    function edit($lessonID)
    {   
        // check if the lesson exists before trying to edit it
        $data['lesson'] = $this->Lesson_model->get_lesson($lessonID);
        
        if(isset($data['lesson']['lessonID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('classID','ClassID','required|integer');
			$this->form_validation->set_rules('lessonFile','LessonFile','required|max_length[150]');
			$this->form_validation->set_rules('lessonDesc','LessonDesc','required|max_length[150]');
			$this->form_validation->set_rules('lessonTitle','LessonTitle','required|max_length[50]');
			$this->form_validation->set_rules('dateUploaded','DateUploaded','required');
			$this->form_validation->set_rules('dateModified','DateModified','required');
			$this->form_validation->set_rules('dateExpiry','DateExpiry','required');
			$this->form_validation->set_rules('status','Status','required|max_length[15]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'classID' => $this->input->post('classID'),
					'lessonFile' => $this->input->post('lessonFile'),
					'lessonDesc' => $this->input->post('lessonDesc'),
					'lessonTitle' => $this->input->post('lessonTitle'),
					'dateUploaded' => $this->input->post('dateUploaded'),
					'dateModified' => $this->input->post('dateModified'),
					'dateExpiry' => $this->input->post('dateExpiry'),
					'status' => $this->input->post('status'),
                );

                $this->Lesson_model->update_lesson($lessonID,$params);            
                redirect('lesson/index');
            }
            else
            {
				$this->load->model('Theclass_model');
				$data['all_theclasses'] = $this->Theclass_model->get_all_theclasses();

                $data['_view'] = 'lesson/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The lesson you are trying to edit does not exist.');
    } 

    /*
     * Deleting lesson
     */
    function remove($lessonID)
    {
        $lesson = $this->Lesson_model->get_lesson($lessonID);

        // check if the lesson exists before trying to delete it
        if(isset($lesson['lessonID']))
        {
            $this->Lesson_model->delete_lesson($lessonID);
            redirect('lesson/index');
        }
        else
            show_error('The lesson you are trying to delete does not exist.');
    }
    
}
